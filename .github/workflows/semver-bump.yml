name: Semantic Versioning
description: Bump's version on PR merged to main

on:
  pull_request:
    types: [closed]
    branches:
      - main

jobs:
  bump-version:
    if: >
      github.event.pull_request.merged == true &&
      !startsWith(github.event.pull_request.head.ref, 'release/v')
    runs-on: ubuntu-latest
    steps:
      - name: 💾 Checkout Repository
        uses: actions/checkout@v4

      - name: 🔧 Setup Git User
        run: |
          git config user.name "github-actions"
          git config user.email "github-actions@github.com"

      - name: 🪪 Authenticate GitHub CLI
        run: echo "${{ secrets.GITHUB_TOKEN }}" | gh auth login --with-token

      - name: 🏷️ Determine Version Bump Type from Labels
        id: version
        run: |
          labels=$(curl -s -H "Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}" https://api.github.com/repos/${{ github.repository }}/issues/${{ github.event.pull_request.number }}/labels)
          if echo "$labels" | grep -q '"name": "major"'; then
            echo "type=major" >> $GITHUB_OUTPUT
          elif echo "$labels" | grep -q '"name": "minor"'; then
            echo "type=minor" >> $GITHUB_OUTPUT
          else
            echo "type=patch" >> $GITHUB_OUTPUT
          fi

      - name: 📦 Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: 🔹 Cache Dependencies
        id: node-cache
        uses: actions/cache@v4
        with:
          path: node_modules
          key: node-modules-${{ runner.os }}-${{ hashFiles('package-lock.json') }}

      - name: 📥 Install Dependencies
        run: npm ci

      - name: 🚀 Run standard-version
        run: npx standard-version --release-as ${{ steps.version.outputs.type }} --skip.commit --skip.tag

      - name: 🆕 Create Unique Release Branch
        id: version_branch
        run: |
          VERSION=$(node -p 'require("./package.json").version')
          TS=$(date +%Y%m%dT%H%M)
          BRANCH="release/v$VERSION-$TS"

          echo "version=$VERSION" >> $GITHUB_OUTPUT
          echo "branch=$BRANCH" >> $GITHUB_OUTPUT

          git checkout -b "$BRANCH"

      - name: 💬 Commit and Push Release Branch
        run: |
          git add package.json package-lock.json CHANGELOG.md
          git commit -m "chore(release): bump version [skip ci]"
          git fetch origin
          git push -u origin ${{ steps.version_branch.outputs.branch }}

      - name: 📬 Create Pull Request with GitHub CLI
        id: pr
        run: |
          PR_URL=$(gh pr create \
            --base main \
            --head ${{ steps.version_branch.outputs.branch }} \
            --title "chore(release): bump version" \
            --body "This PR was auto-generated after merging to main.")
          echo "url=$PR_URL" >> $GITHUB_OUTPUT

      - name: 🧪 Trigger PR CI by Touching Title
        run: |
          PR_NUMBER=$(gh pr view ${{ steps.pr.outputs.url }} --json number -q .number)
          echo "Touching PR title to trigger CI"
          gh pr edit "$PR_NUMBER" --title "chore(release): bump version to v${{ steps.version_branch.outputs.version }}"

      - name: ✅ Enable Auto-Merge
        run: |
          gh pr merge --auto --merge "${{ steps.pr.outputs.url }}"
